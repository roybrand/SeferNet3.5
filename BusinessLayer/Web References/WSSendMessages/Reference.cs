//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SeferNet.BusinessLayer.WSSendMessages {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSFaxSenderSoap", Namespace="http://tempuri.org/")]
    public partial class WSFaxSender : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDAtaFromDBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSFaxSender() {
            this.Url = global::SeferNet.BusinessLayer.Properties.Settings.Default.BusinessLayer_WSSendMessages_WSFaxSender;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendFaxCompletedEventHandler SendFaxCompleted;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event GetDAtaFromDBCompletedEventHandler GetDAtaFromDBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFax(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription) {
            object[] results = this.Invoke("SendFax", new object[] {
                        p_xmlData,
                        p_ADUserName,
                        p_sendingApplication,
                        p_faxNum,
                        p_iAggrigateFilesSize,
                        p_PlaceIndentifier,
                        p_msgDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFaxAsync(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription) {
            this.SendFaxAsync(p_xmlData, p_ADUserName, p_sendingApplication, p_faxNum, p_iAggrigateFilesSize, p_PlaceIndentifier, p_msgDescription, null);
        }
        
        /// <remarks/>
        public void SendFaxAsync(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription, object userState) {
            if ((this.SendFaxOperationCompleted == null)) {
                this.SendFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFaxOperationCompleted);
            }
            this.InvokeAsync("SendFax", new object[] {
                        p_xmlData,
                        p_ADUserName,
                        p_sendingApplication,
                        p_faxNum,
                        p_iAggrigateFilesSize,
                        p_PlaceIndentifier,
                        p_msgDescription}, this.SendFaxOperationCompleted, userState);
        }
        
        private void OnSendFaxOperationCompleted(object arg) {
            if ((this.SendFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFaxCompleted(this, new SendFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMS(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        p_xmlData,
                        p_ADUserName,
                        p_sendingApplication,
                        p_faxNum,
                        p_iAggrigateFilesSize,
                        p_PlaceIndentifier,
                        p_msgDescription});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription) {
            this.SendSMSAsync(p_xmlData, p_ADUserName, p_sendingApplication, p_faxNum, p_iAggrigateFilesSize, p_PlaceIndentifier, p_msgDescription, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string p_xmlData, string p_ADUserName, int p_sendingApplication, string p_faxNum, int p_iAggrigateFilesSize, int p_PlaceIndentifier, string p_msgDescription, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        p_xmlData,
                        p_ADUserName,
                        p_sendingApplication,
                        p_faxNum,
                        p_iAggrigateFilesSize,
                        p_PlaceIndentifier,
                        p_msgDescription}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDAtaFromDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDAtaFromDB() {
            object[] results = this.Invoke("GetDAtaFromDB", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDAtaFromDBAsync() {
            this.GetDAtaFromDBAsync(null);
        }
        
        /// <remarks/>
        public void GetDAtaFromDBAsync(object userState) {
            if ((this.GetDAtaFromDBOperationCompleted == null)) {
                this.GetDAtaFromDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDAtaFromDBOperationCompleted);
            }
            this.InvokeAsync("GetDAtaFromDB", new object[0], this.GetDAtaFromDBOperationCompleted, userState);
        }
        
        private void OnGetDAtaFromDBOperationCompleted(object arg) {
            if ((this.GetDAtaFromDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDAtaFromDBCompleted(this, new GetDAtaFromDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendFaxCompletedEventHandler(object sender, SendFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDAtaFromDBCompletedEventHandler(object sender, GetDAtaFromDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDAtaFromDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDAtaFromDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591